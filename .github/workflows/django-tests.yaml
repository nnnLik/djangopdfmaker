name: Django Tests CI

on:
  push:
    branches: [ master ]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r djangopdfmaker/requirements.txt

      - name: Run Flake8
        run: |
          error_count=$(flake8 . --count --config tox.ini)

          if [ $error_count -gt 0 ]; then
            echo "Flake8 found $error_count errors."
            exit 1
          fi

      - name: Run tests
        env:
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          DEBUG: ${{ secrets.DEBUG }}
          DB_ENGINE: ${{ secrets.DB_ENGINE }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
          CELERY_BROKER_URL: ${{ secrets.CELERY_BROKER_URL }}
          CELERY_RESULT_BACKEND: ${{ secrets.CELERY_RESULT_BACKEND }}
        run: |
          cd djangopdfmaker
          echo "SECRET_KEY=${SECRET_KEY}" > .env
          echo "DEBUG=${DEBUG}" >> .env
          echo "DB_ENGINE=${DB_ENGINE}" >> .env
          echo "DB_NAME=${DB_NAME}" >> .env
          echo "DB_USER=${DB_USER}" >> .env
          echo "DB_PASSWORD=${DB_PASSWORD}" >> .env
          echo "DB_HOST=${DB_HOST}" >> .env
          echo "DB_PORT=${DB_PORT}" >> .env
          echo "POSTGRES_PASSWORD=${POSTGRES_PASSWORD}" >> .env
          echo "POSTGRES_USER=${POSTGRES_USER}" >> .env
          echo "POSTGRES_DB=${POSTGRES_DB}" >> .env
          echo "POSTGRES_PORT=${POSTGRES_PORT}" >> .env
          echo "CELERY_BROKER_URL=${CELERY_BROKER_URL}" >> .env
          echo "CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}" >> .env
          python manage.py test
